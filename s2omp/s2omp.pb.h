// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2omp.proto

#ifndef PROTOBUF_s2omp_2eproto__INCLUDED
#define PROTOBUF_s2omp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace s2omp {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_s2omp_2eproto();
void protobuf_AssignDesc_s2omp_2eproto();
void protobuf_ShutdownFile_s2omp_2eproto();

class PointProto;
class PixelProto;
class PointVectorProto;
class PixelVectorProto;
class FieldUnionProto;
class TreeUnionProto;

enum FieldUnionProto_FieldType {
  FieldUnionProto_FieldType_SCALAR_FIELD = 0,
  FieldUnionProto_FieldType_DENSITY_FIELD = 1,
  FieldUnionProto_FieldType_SAMPLED_FIELD = 2
};
bool FieldUnionProto_FieldType_IsValid(int value);
const FieldUnionProto_FieldType FieldUnionProto_FieldType_FieldType_MIN = FieldUnionProto_FieldType_SCALAR_FIELD;
const FieldUnionProto_FieldType FieldUnionProto_FieldType_FieldType_MAX = FieldUnionProto_FieldType_SAMPLED_FIELD;
const int FieldUnionProto_FieldType_FieldType_ARRAYSIZE = FieldUnionProto_FieldType_FieldType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldUnionProto_FieldType_descriptor();
inline const ::std::string& FieldUnionProto_FieldType_Name(FieldUnionProto_FieldType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldUnionProto_FieldType_descriptor(), value);
}
inline bool FieldUnionProto_FieldType_Parse(
    const ::std::string& name, FieldUnionProto_FieldType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldUnionProto_FieldType>(
    FieldUnionProto_FieldType_descriptor(), name, value);
}
// ===================================================================

class PointProto : public ::google::protobuf::Message {
 public:
  PointProto();
  virtual ~PointProto();

  PointProto(const PointProto& from);

  inline PointProto& operator=(const PointProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointProto& default_instance();

  void Swap(PointProto* other);

  // implements Message ----------------------------------------------

  PointProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointProto& from);
  void MergeFrom(const PointProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required double weight = 2;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 2;
  inline double weight() const;
  inline void set_weight(double value);

  // @@protoc_insertion_point(class_scope:s2omp.PointProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  double weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_s2omp_2eproto();
  friend void protobuf_AssignDesc_s2omp_2eproto();
  friend void protobuf_ShutdownFile_s2omp_2eproto();

  void InitAsDefaultInstance();
  static PointProto* default_instance_;
};
// -------------------------------------------------------------------

class PixelProto : public ::google::protobuf::Message {
 public:
  PixelProto();
  virtual ~PixelProto();

  PixelProto(const PixelProto& from);

  inline PixelProto& operator=(const PixelProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PixelProto& default_instance();

  void Swap(PixelProto* other);

  // implements Message ----------------------------------------------

  PixelProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PixelProto& from);
  void MergeFrom(const PixelProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional double weight = 2;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 2;
  inline double weight() const;
  inline void set_weight(double value);

  // optional double intensity = 3;
  inline bool has_intensity() const;
  inline void clear_intensity();
  static const int kIntensityFieldNumber = 3;
  inline double intensity() const;
  inline void set_intensity(double value);

  // optional uint32 n_points = 4;
  inline bool has_n_points() const;
  inline void clear_n_points();
  static const int kNPointsFieldNumber = 4;
  inline ::google::protobuf::uint32 n_points() const;
  inline void set_n_points(::google::protobuf::uint32 value);

  // repeated .s2omp.PointProto point = 5;
  inline int point_size() const;
  inline void clear_point();
  static const int kPointFieldNumber = 5;
  inline const ::s2omp::PointProto& point(int index) const;
  inline ::s2omp::PointProto* mutable_point(int index);
  inline ::s2omp::PointProto* add_point();
  inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >&
      point() const;
  inline ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >*
      mutable_point();

  // optional uint32 max_points = 6;
  inline bool has_max_points() const;
  inline void clear_max_points();
  static const int kMaxPointsFieldNumber = 6;
  inline ::google::protobuf::uint32 max_points() const;
  inline void set_max_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:s2omp.PixelProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_intensity();
  inline void clear_has_intensity();
  inline void set_has_n_points();
  inline void clear_has_n_points();
  inline void set_has_max_points();
  inline void clear_has_max_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  double weight_;
  double intensity_;
  ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto > point_;
  ::google::protobuf::uint32 n_points_;
  ::google::protobuf::uint32 max_points_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_s2omp_2eproto();
  friend void protobuf_AssignDesc_s2omp_2eproto();
  friend void protobuf_ShutdownFile_s2omp_2eproto();

  void InitAsDefaultInstance();
  static PixelProto* default_instance_;
};
// -------------------------------------------------------------------

class PointVectorProto : public ::google::protobuf::Message {
 public:
  PointVectorProto();
  virtual ~PointVectorProto();

  PointVectorProto(const PointVectorProto& from);

  inline PointVectorProto& operator=(const PointVectorProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointVectorProto& default_instance();

  void Swap(PointVectorProto* other);

  // implements Message ----------------------------------------------

  PointVectorProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointVectorProto& from);
  void MergeFrom(const PointVectorProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .s2omp.PointProto point = 1;
  inline int point_size() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline const ::s2omp::PointProto& point(int index) const;
  inline ::s2omp::PointProto* mutable_point(int index);
  inline ::s2omp::PointProto* add_point();
  inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >&
      point() const;
  inline ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >*
      mutable_point();

  // @@protoc_insertion_point(class_scope:s2omp.PointVectorProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto > point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_s2omp_2eproto();
  friend void protobuf_AssignDesc_s2omp_2eproto();
  friend void protobuf_ShutdownFile_s2omp_2eproto();

  void InitAsDefaultInstance();
  static PointVectorProto* default_instance_;
};
// -------------------------------------------------------------------

class PixelVectorProto : public ::google::protobuf::Message {
 public:
  PixelVectorProto();
  virtual ~PixelVectorProto();

  PixelVectorProto(const PixelVectorProto& from);

  inline PixelVectorProto& operator=(const PixelVectorProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PixelVectorProto& default_instance();

  void Swap(PixelVectorProto* other);

  // implements Message ----------------------------------------------

  PixelVectorProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PixelVectorProto& from);
  void MergeFrom(const PixelVectorProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .s2omp.PixelProto pixel = 1;
  inline int pixel_size() const;
  inline void clear_pixel();
  static const int kPixelFieldNumber = 1;
  inline const ::s2omp::PixelProto& pixel(int index) const;
  inline ::s2omp::PixelProto* mutable_pixel(int index);
  inline ::s2omp::PixelProto* add_pixel();
  inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >&
      pixel() const;
  inline ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >*
      mutable_pixel();

  // @@protoc_insertion_point(class_scope:s2omp.PixelVectorProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto > pixel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_s2omp_2eproto();
  friend void protobuf_AssignDesc_s2omp_2eproto();
  friend void protobuf_ShutdownFile_s2omp_2eproto();

  void InitAsDefaultInstance();
  static PixelVectorProto* default_instance_;
};
// -------------------------------------------------------------------

class FieldUnionProto : public ::google::protobuf::Message {
 public:
  FieldUnionProto();
  virtual ~FieldUnionProto();

  FieldUnionProto(const FieldUnionProto& from);

  inline FieldUnionProto& operator=(const FieldUnionProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldUnionProto& default_instance();

  void Swap(FieldUnionProto* other);

  // implements Message ----------------------------------------------

  FieldUnionProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldUnionProto& from);
  void MergeFrom(const FieldUnionProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FieldUnionProto_FieldType FieldType;
  static const FieldType SCALAR_FIELD = FieldUnionProto_FieldType_SCALAR_FIELD;
  static const FieldType DENSITY_FIELD = FieldUnionProto_FieldType_DENSITY_FIELD;
  static const FieldType SAMPLED_FIELD = FieldUnionProto_FieldType_SAMPLED_FIELD;
  static inline bool FieldType_IsValid(int value) {
    return FieldUnionProto_FieldType_IsValid(value);
  }
  static const FieldType FieldType_MIN =
    FieldUnionProto_FieldType_FieldType_MIN;
  static const FieldType FieldType_MAX =
    FieldUnionProto_FieldType_FieldType_MAX;
  static const int FieldType_ARRAYSIZE =
    FieldUnionProto_FieldType_FieldType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FieldType_descriptor() {
    return FieldUnionProto_FieldType_descriptor();
  }
  static inline const ::std::string& FieldType_Name(FieldType value) {
    return FieldUnionProto_FieldType_Name(value);
  }
  static inline bool FieldType_Parse(const ::std::string& name,
      FieldType* value) {
    return FieldUnionProto_FieldType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .s2omp.FieldUnionProto.FieldType field_type = 1;
  inline bool has_field_type() const;
  inline void clear_field_type();
  static const int kFieldTypeFieldNumber = 1;
  inline ::s2omp::FieldUnionProto_FieldType field_type() const;
  inline void set_field_type(::s2omp::FieldUnionProto_FieldType value);

  // repeated .s2omp.PixelProto pixel = 2;
  inline int pixel_size() const;
  inline void clear_pixel();
  static const int kPixelFieldNumber = 2;
  inline const ::s2omp::PixelProto& pixel(int index) const;
  inline ::s2omp::PixelProto* mutable_pixel(int index);
  inline ::s2omp::PixelProto* add_pixel();
  inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >&
      pixel() const;
  inline ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >*
      mutable_pixel();

  // @@protoc_insertion_point(class_scope:s2omp.FieldUnionProto)
 private:
  inline void set_has_field_type();
  inline void clear_has_field_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto > pixel_;
  int field_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_s2omp_2eproto();
  friend void protobuf_AssignDesc_s2omp_2eproto();
  friend void protobuf_ShutdownFile_s2omp_2eproto();

  void InitAsDefaultInstance();
  static FieldUnionProto* default_instance_;
};
// -------------------------------------------------------------------

class TreeUnionProto : public ::google::protobuf::Message {
 public:
  TreeUnionProto();
  virtual ~TreeUnionProto();

  TreeUnionProto(const TreeUnionProto& from);

  inline TreeUnionProto& operator=(const TreeUnionProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreeUnionProto& default_instance();

  void Swap(TreeUnionProto* other);

  // implements Message ----------------------------------------------

  TreeUnionProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreeUnionProto& from);
  void MergeFrom(const TreeUnionProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 node_capacity = 2;
  inline bool has_node_capacity() const;
  inline void clear_node_capacity();
  static const int kNodeCapacityFieldNumber = 2;
  inline ::google::protobuf::uint32 node_capacity() const;
  inline void set_node_capacity(::google::protobuf::uint32 value);

  // repeated .s2omp.PointProto point = 3;
  inline int point_size() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline const ::s2omp::PointProto& point(int index) const;
  inline ::s2omp::PointProto* mutable_point(int index);
  inline ::s2omp::PointProto* add_point();
  inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >&
      point() const;
  inline ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >*
      mutable_point();

  // @@protoc_insertion_point(class_scope:s2omp.TreeUnionProto)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_node_capacity();
  inline void clear_has_node_capacity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 node_capacity_;
  ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto > point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_s2omp_2eproto();
  friend void protobuf_AssignDesc_s2omp_2eproto();
  friend void protobuf_ShutdownFile_s2omp_2eproto();

  void InitAsDefaultInstance();
  static TreeUnionProto* default_instance_;
};
// ===================================================================


// ===================================================================

// PointProto

// required uint64 id = 1;
inline bool PointProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointProto::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PointProto::id() const {
  return id_;
}
inline void PointProto::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required double weight = 2;
inline bool PointProto::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointProto::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointProto::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointProto::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline double PointProto::weight() const {
  return weight_;
}
inline void PointProto::set_weight(double value) {
  set_has_weight();
  weight_ = value;
}

// -------------------------------------------------------------------

// PixelProto

// required uint64 id = 1;
inline bool PixelProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PixelProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PixelProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PixelProto::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PixelProto::id() const {
  return id_;
}
inline void PixelProto::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional double weight = 2;
inline bool PixelProto::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PixelProto::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PixelProto::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PixelProto::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline double PixelProto::weight() const {
  return weight_;
}
inline void PixelProto::set_weight(double value) {
  set_has_weight();
  weight_ = value;
}

// optional double intensity = 3;
inline bool PixelProto::has_intensity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PixelProto::set_has_intensity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PixelProto::clear_has_intensity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PixelProto::clear_intensity() {
  intensity_ = 0;
  clear_has_intensity();
}
inline double PixelProto::intensity() const {
  return intensity_;
}
inline void PixelProto::set_intensity(double value) {
  set_has_intensity();
  intensity_ = value;
}

// optional uint32 n_points = 4;
inline bool PixelProto::has_n_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PixelProto::set_has_n_points() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PixelProto::clear_has_n_points() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PixelProto::clear_n_points() {
  n_points_ = 0u;
  clear_has_n_points();
}
inline ::google::protobuf::uint32 PixelProto::n_points() const {
  return n_points_;
}
inline void PixelProto::set_n_points(::google::protobuf::uint32 value) {
  set_has_n_points();
  n_points_ = value;
}

// repeated .s2omp.PointProto point = 5;
inline int PixelProto::point_size() const {
  return point_.size();
}
inline void PixelProto::clear_point() {
  point_.Clear();
}
inline const ::s2omp::PointProto& PixelProto::point(int index) const {
  return point_.Get(index);
}
inline ::s2omp::PointProto* PixelProto::mutable_point(int index) {
  return point_.Mutable(index);
}
inline ::s2omp::PointProto* PixelProto::add_point() {
  return point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >&
PixelProto::point() const {
  return point_;
}
inline ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >*
PixelProto::mutable_point() {
  return &point_;
}

// optional uint32 max_points = 6;
inline bool PixelProto::has_max_points() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PixelProto::set_has_max_points() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PixelProto::clear_has_max_points() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PixelProto::clear_max_points() {
  max_points_ = 0u;
  clear_has_max_points();
}
inline ::google::protobuf::uint32 PixelProto::max_points() const {
  return max_points_;
}
inline void PixelProto::set_max_points(::google::protobuf::uint32 value) {
  set_has_max_points();
  max_points_ = value;
}

// -------------------------------------------------------------------

// PointVectorProto

// repeated .s2omp.PointProto point = 1;
inline int PointVectorProto::point_size() const {
  return point_.size();
}
inline void PointVectorProto::clear_point() {
  point_.Clear();
}
inline const ::s2omp::PointProto& PointVectorProto::point(int index) const {
  return point_.Get(index);
}
inline ::s2omp::PointProto* PointVectorProto::mutable_point(int index) {
  return point_.Mutable(index);
}
inline ::s2omp::PointProto* PointVectorProto::add_point() {
  return point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >&
PointVectorProto::point() const {
  return point_;
}
inline ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >*
PointVectorProto::mutable_point() {
  return &point_;
}

// -------------------------------------------------------------------

// PixelVectorProto

// repeated .s2omp.PixelProto pixel = 1;
inline int PixelVectorProto::pixel_size() const {
  return pixel_.size();
}
inline void PixelVectorProto::clear_pixel() {
  pixel_.Clear();
}
inline const ::s2omp::PixelProto& PixelVectorProto::pixel(int index) const {
  return pixel_.Get(index);
}
inline ::s2omp::PixelProto* PixelVectorProto::mutable_pixel(int index) {
  return pixel_.Mutable(index);
}
inline ::s2omp::PixelProto* PixelVectorProto::add_pixel() {
  return pixel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >&
PixelVectorProto::pixel() const {
  return pixel_;
}
inline ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >*
PixelVectorProto::mutable_pixel() {
  return &pixel_;
}

// -------------------------------------------------------------------

// FieldUnionProto

// required .s2omp.FieldUnionProto.FieldType field_type = 1;
inline bool FieldUnionProto::has_field_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldUnionProto::set_has_field_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldUnionProto::clear_has_field_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldUnionProto::clear_field_type() {
  field_type_ = 0;
  clear_has_field_type();
}
inline ::s2omp::FieldUnionProto_FieldType FieldUnionProto::field_type() const {
  return static_cast< ::s2omp::FieldUnionProto_FieldType >(field_type_);
}
inline void FieldUnionProto::set_field_type(::s2omp::FieldUnionProto_FieldType value) {
  assert(::s2omp::FieldUnionProto_FieldType_IsValid(value));
  set_has_field_type();
  field_type_ = value;
}

// repeated .s2omp.PixelProto pixel = 2;
inline int FieldUnionProto::pixel_size() const {
  return pixel_.size();
}
inline void FieldUnionProto::clear_pixel() {
  pixel_.Clear();
}
inline const ::s2omp::PixelProto& FieldUnionProto::pixel(int index) const {
  return pixel_.Get(index);
}
inline ::s2omp::PixelProto* FieldUnionProto::mutable_pixel(int index) {
  return pixel_.Mutable(index);
}
inline ::s2omp::PixelProto* FieldUnionProto::add_pixel() {
  return pixel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >&
FieldUnionProto::pixel() const {
  return pixel_;
}
inline ::google::protobuf::RepeatedPtrField< ::s2omp::PixelProto >*
FieldUnionProto::mutable_pixel() {
  return &pixel_;
}

// -------------------------------------------------------------------

// TreeUnionProto

// required uint32 level = 1;
inline bool TreeUnionProto::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreeUnionProto::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreeUnionProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreeUnionProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TreeUnionProto::level() const {
  return level_;
}
inline void TreeUnionProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 node_capacity = 2;
inline bool TreeUnionProto::has_node_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreeUnionProto::set_has_node_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreeUnionProto::clear_has_node_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreeUnionProto::clear_node_capacity() {
  node_capacity_ = 0u;
  clear_has_node_capacity();
}
inline ::google::protobuf::uint32 TreeUnionProto::node_capacity() const {
  return node_capacity_;
}
inline void TreeUnionProto::set_node_capacity(::google::protobuf::uint32 value) {
  set_has_node_capacity();
  node_capacity_ = value;
}

// repeated .s2omp.PointProto point = 3;
inline int TreeUnionProto::point_size() const {
  return point_.size();
}
inline void TreeUnionProto::clear_point() {
  point_.Clear();
}
inline const ::s2omp::PointProto& TreeUnionProto::point(int index) const {
  return point_.Get(index);
}
inline ::s2omp::PointProto* TreeUnionProto::mutable_point(int index) {
  return point_.Mutable(index);
}
inline ::s2omp::PointProto* TreeUnionProto::add_point() {
  return point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >&
TreeUnionProto::point() const {
  return point_;
}
inline ::google::protobuf::RepeatedPtrField< ::s2omp::PointProto >*
TreeUnionProto::mutable_point() {
  return &point_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace s2omp

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::s2omp::FieldUnionProto_FieldType>() {
  return ::s2omp::FieldUnionProto_FieldType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_s2omp_2eproto__INCLUDED
